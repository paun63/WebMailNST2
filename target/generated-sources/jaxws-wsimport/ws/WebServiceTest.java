
package ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WebServiceTest", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WebServiceTest {


    /**
     * 
     * @param korisnik
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "registracija", targetNamespace = "http://ws/", className = "ws.Registracija")
    @ResponseWrapper(localName = "registracijaResponse", targetNamespace = "http://ws/", className = "ws.RegistracijaResponse")
    @Action(input = "http://ws/WebServiceTest/registracijaRequest", output = "http://ws/WebServiceTest/registracijaResponse")
    public boolean registracija(
        @WebParam(name = "korisnik", targetNamespace = "")
        Korisnik korisnik);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://ws/", className = "ws.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://ws/", className = "ws.HelloResponse")
    @Action(input = "http://ws/WebServiceTest/helloRequest", output = "http://ws/WebServiceTest/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param korisnik
     * @return
     *     returns ws.Korisnik
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "prijava", targetNamespace = "http://ws/", className = "ws.Prijava")
    @ResponseWrapper(localName = "prijavaResponse", targetNamespace = "http://ws/", className = "ws.PrijavaResponse")
    @Action(input = "http://ws/WebServiceTest/prijavaRequest", output = "http://ws/WebServiceTest/prijavaResponse")
    public Korisnik prijava(
        @WebParam(name = "korisnik", targetNamespace = "")
        Korisnik korisnik);

    /**
     * 
     * @param korisnik
     * @return
     *     returns java.util.List<ws.Poruka>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "vratiListuPoruka", targetNamespace = "http://ws/", className = "ws.VratiListuPoruka")
    @ResponseWrapper(localName = "vratiListuPorukaResponse", targetNamespace = "http://ws/", className = "ws.VratiListuPorukaResponse")
    @Action(input = "http://ws/WebServiceTest/vratiListuPorukaRequest", output = "http://ws/WebServiceTest/vratiListuPorukaResponse")
    public List<Poruka> vratiListuPoruka(
        @WebParam(name = "korisnik", targetNamespace = "")
        Korisnik korisnik);

    /**
     * 
     * @param korisnik
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "povratakSifre", targetNamespace = "http://ws/", className = "ws.PovratakSifre")
    @ResponseWrapper(localName = "povratakSifreResponse", targetNamespace = "http://ws/", className = "ws.PovratakSifreResponse")
    @Action(input = "http://ws/WebServiceTest/povratakSifreRequest", output = "http://ws/WebServiceTest/povratakSifreResponse")
    public String povratakSifre(
        @WebParam(name = "korisnik", targetNamespace = "")
        Korisnik korisnik);

    /**
     * 
     * @param poruka
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "slanjePoruke", targetNamespace = "http://ws/", className = "ws.SlanjePoruke")
    @ResponseWrapper(localName = "slanjePorukeResponse", targetNamespace = "http://ws/", className = "ws.SlanjePorukeResponse")
    @Action(input = "http://ws/WebServiceTest/slanjePorukeRequest", output = "http://ws/WebServiceTest/slanjePorukeResponse")
    public boolean slanjePoruke(
        @WebParam(name = "poruka", targetNamespace = "")
        Poruka poruka);

    /**
     * 
     * @param poruka
     */
    @WebMethod
    @RequestWrapper(localName = "cuvanjeDrafta", targetNamespace = "http://ws/", className = "ws.CuvanjeDrafta")
    @ResponseWrapper(localName = "cuvanjeDraftaResponse", targetNamespace = "http://ws/", className = "ws.CuvanjeDraftaResponse")
    @Action(input = "http://ws/WebServiceTest/cuvanjeDraftaRequest", output = "http://ws/WebServiceTest/cuvanjeDraftaResponse")
    public void cuvanjeDrafta(
        @WebParam(name = "poruka", targetNamespace = "")
        Poruka poruka);

    /**
     * 
     * @param poruka
     */
    @WebMethod
    @RequestWrapper(localName = "obrisiPoruku", targetNamespace = "http://ws/", className = "ws.ObrisiPoruku")
    @ResponseWrapper(localName = "obrisiPorukuResponse", targetNamespace = "http://ws/", className = "ws.ObrisiPorukuResponse")
    @Action(input = "http://ws/WebServiceTest/obrisiPorukuRequest", output = "http://ws/WebServiceTest/obrisiPorukuResponse")
    public void obrisiPoruku(
        @WebParam(name = "poruka", targetNamespace = "")
        Poruka poruka);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "vratiListuKorisnikID", targetNamespace = "http://ws/", className = "ws.VratiListuKorisnikID")
    @ResponseWrapper(localName = "vratiListuKorisnikIDResponse", targetNamespace = "http://ws/", className = "ws.VratiListuKorisnikIDResponse")
    @Action(input = "http://ws/WebServiceTest/vratiListuKorisnikIDRequest", output = "http://ws/WebServiceTest/vratiListuKorisnikIDResponse")
    public List<String> vratiListuKorisnikID();

    /**
     * 
     * @param korisnik
     * @return
     *     returns java.util.List<ws.Korisnik>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "vratiListuKontakata", targetNamespace = "http://ws/", className = "ws.VratiListuKontakata")
    @ResponseWrapper(localName = "vratiListuKontakataResponse", targetNamespace = "http://ws/", className = "ws.VratiListuKontakataResponse")
    @Action(input = "http://ws/WebServiceTest/vratiListuKontakataRequest", output = "http://ws/WebServiceTest/vratiListuKontakataResponse")
    public List<Korisnik> vratiListuKontakata(
        @WebParam(name = "korisnik", targetNamespace = "")
        Korisnik korisnik);

    /**
     * 
     * @param poruka
     */
    @WebMethod
    @RequestWrapper(localName = "azurirajPregledano", targetNamespace = "http://ws/", className = "ws.AzurirajPregledano")
    @ResponseWrapper(localName = "azurirajPregledanoResponse", targetNamespace = "http://ws/", className = "ws.AzurirajPregledanoResponse")
    @Action(input = "http://ws/WebServiceTest/azurirajPregledanoRequest", output = "http://ws/WebServiceTest/azurirajPregledanoResponse")
    public void azurirajPregledano(
        @WebParam(name = "poruka", targetNamespace = "")
        Poruka poruka);

}
